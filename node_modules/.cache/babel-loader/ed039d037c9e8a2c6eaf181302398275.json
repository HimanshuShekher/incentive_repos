{"ast":null,"code":"var _jsxFileName = \"/Users/himanshu/Desktop/github-incentive-rep/src/components/StarredRepos.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Card, Image, CardGroup, Segment, Container, Header, Icon } from \"semantic-ui-react\";\nimport Moment from \"react-moment\";\nimport { useSelector } from \"react-redux\";\nimport \"../App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StarredRepos = () => {\n  _s();\n\n  const starredRepos = useSelector(state => state.starredRepos);\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    className: \"starredRepos-wrapper\",\n    inverted: true,\n    children: starredRepos.length > 0 ? /*#__PURE__*/_jsxDEV(CardGroup, {\n      children: starredRepos.map(_ref => {\n        let {\n          id,\n          owner,\n          name,\n          created_at,\n          description,\n          html_url,\n          homepage,\n          stargazers_count\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              circular: true,\n              floated: \"right\",\n              size: \"mini\",\n              src: owner.avatar_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n              children: /*#__PURE__*/_jsxDEV(Moment, {\n                format: \"DD-MM-YYYY\",\n                children: created_at\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [stargazers_count, \" stars \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ui two buttons\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                animated: \"fade\",\n                basic: true,\n                color: \"grey\",\n                href: html_url,\n                target: \"_blank\",\n                children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n                  visible: true,\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    color: \"black\",\n                    name: \"github\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 27\n                  }, this), \"Github repository\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n                  hidden: true,\n                  children: \"To source code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                animated: \"fade\",\n                basic: true,\n                color: \"red\",\n                content: \"Live version\",\n                icon: \"keyboard\",\n                href: homepage,\n                target: \"_blank\",\n                children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n                  visible: true,\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"keyboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 27\n                  }, this), \"Live Test\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n                  hidden: true,\n                  children: \" To webApp \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      className: \"empty-msg\",\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        inverted: true,\n        children: \"Star repositories to see them here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StarredRepos, \"BXIfaTuBBkm4Sig4gKII3qmbZGs=\", false, function () {\n  return [useSelector];\n});\n\n_c = StarredRepos;\nexport default StarredRepos;\n\nvar _c;\n\n$RefreshReg$(_c, \"StarredRepos\");","map":{"version":3,"sources":["/Users/himanshu/Desktop/github-incentive-rep/src/components/StarredRepos.js"],"names":["React","Button","Card","Image","CardGroup","Segment","Container","Header","Icon","Moment","useSelector","StarredRepos","starredRepos","state","length","map","id","owner","name","created_at","description","html_url","homepage","stargazers_count","avatar_url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Card,\n  Image,\n  CardGroup,\n  Segment,\n  Container,\n  Header,\n  Icon,\n} from \"semantic-ui-react\";\nimport Moment from \"react-moment\";\nimport { useSelector } from \"react-redux\";\nimport \"../App.scss\";\n\nconst StarredRepos = () => {\n  const starredRepos = useSelector((state) => state.starredRepos);\n  return (\n    <Segment className=\"starredRepos-wrapper\" inverted>\n      {starredRepos.length > 0 ? (\n        <CardGroup>\n          {starredRepos.map(\n            ({\n              id,\n              owner,\n              name,\n              created_at,\n              description,\n              html_url,\n              homepage,\n              stargazers_count,\n            }) => {\n              return (\n                <Card key={id}>\n                  <Card.Content>\n                    <Image\n                      circular\n                      floated=\"right\"\n                      size=\"mini\"\n                      src={owner.avatar_url}\n                    />\n                    <Card.Header>{name}</Card.Header>\n                    <Card.Meta>\n                      <Moment format=\"DD-MM-YYYY\">{created_at}</Moment>\n                    </Card.Meta>\n                    <Card.Description>{description}</Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                    <span>{stargazers_count} stars </span>\n                  </Card.Content>\n                  <Card.Content extra>\n                    <div className=\"ui two buttons\">\n                      <Button\n                        animated=\"fade\"\n                        basic\n                        color=\"grey\"\n                        href={html_url}\n                        target=\"_blank\"\n                      >\n                        <Button.Content visible>\n                          <Icon color=\"black\" name=\"github\" />\n                          Github repository\n                        </Button.Content>\n                        <Button.Content hidden>To source code</Button.Content>\n                      </Button>\n                      <Button\n                        animated=\"fade\"\n                        basic\n                        color=\"red\"\n                        content=\"Live version\"\n                        icon=\"keyboard\"\n                        href={homepage}\n                        target=\"_blank\"\n                      >\n                        <Button.Content visible>\n                          <Icon name=\"keyboard\" />\n                          Live Test\n                        </Button.Content>\n                        <Button.Content hidden> To webApp </Button.Content>\n                      </Button>\n                    </div>\n                  </Card.Content>\n                </Card>\n              );\n            }\n          )}\n        </CardGroup>\n      ) : (\n        <Container className=\"empty-msg\">\n          <Header inverted>Star repositories to see them here</Header>\n        </Container>\n      )}\n    </Segment>\n  );\n};\n\nexport default StarredRepos;\n"]},"metadata":{},"sourceType":"module"}