{"ast":null,"code":"var _jsxFileName = \"/Users/himanshu/Desktop/github-incentive-rep/src/components/Repository.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Card, Image, Rating, Icon } from \"semantic-ui-react\";\nimport Moment from \"react-moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SET_STARRED_REPOS } from \"../lib/ActionTypes\";\nimport \"../App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repository = _ref => {\n  _s();\n\n  let {\n    repository\n  } = _ref;\n  const {\n    id,\n    owner,\n    name,\n    created_at,\n    description,\n    html_url,\n    homepage,\n    stargazers_count\n  } = repository;\n  const [starred, setStarred] = useState({});\n  const starredRepos = useSelector(state => state.starredRepos);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let isStarred = starredRepos.find(repo => repo.id === id);\n    setStarred(isStarred);\n  }, [starredRepos, id]);\n\n  const clickHandler = () => {\n    if (starred) {\n      //prevent adding the same card\n      const filteredRepos = starredRepos.filter(repo => repo !== starred);\n      dispatch({\n        type: SET_STARRED_REPOS,\n        payload: filteredRepos\n      });\n    } else {\n      // add card if its not starred yet\n      const newStarredRepos = [...starredRepos, repository];\n      dispatch({\n        type: SET_STARRED_REPOS,\n        payload: newStarredRepos\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n      children: [/*#__PURE__*/_jsxDEV(Rating, {\n        icon: \"star\",\n        onClick: clickHandler,\n        rating: starred ? 1 : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        circular: true,\n        floated: \"right\",\n        size: \"mini\",\n        src: owner.avatar_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n        children: /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"DD-MM-YYYY\",\n          children: created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n      extra: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [stargazers_count, \" stars\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n      extra: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui two buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          animated: \"fade\",\n          basic: true,\n          color: \"grey\",\n          href: html_url,\n          target: \"_blank\",\n          children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n            visible: true,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              color: \"black\",\n              name: \"github\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), \"Github repository\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n            hidden: true,\n            children: \"To source code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          animated: \"fade\",\n          basic: true,\n          color: \"red\",\n          content: \"Live version\",\n          icon: \"keyboard\",\n          href: homepage,\n          target: \"_blank\",\n          children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n            visible: true,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"keyboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), \"Live Test\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n            hidden: true,\n            children: \" To webApp \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Repository, \"j/hOmEcO/+V6lMOaQU5TVPxObzI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Repository;\nexport default Repository;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repository\");","map":{"version":3,"sources":["/Users/himanshu/Desktop/github-incentive-rep/src/components/Repository.js"],"names":["React","useState","useEffect","Button","Card","Image","Rating","Icon","Moment","useDispatch","useSelector","SET_STARRED_REPOS","Repository","repository","id","owner","name","created_at","description","html_url","homepage","stargazers_count","starred","setStarred","starredRepos","state","dispatch","isStarred","find","repo","clickHandler","filteredRepos","filter","type","payload","newStarredRepos","avatar_url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Card, Image, Rating, Icon } from \"semantic-ui-react\";\nimport Moment from \"react-moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SET_STARRED_REPOS } from \"../lib/ActionTypes\";\nimport \"../App.scss\";\n\nconst Repository = ({ repository }) => {\n  const {\n    id,\n    owner,\n    name,\n    created_at,\n    description,\n    html_url,\n    homepage,\n    stargazers_count,\n  } = repository;\n  const [starred, setStarred] = useState({});\n  const starredRepos = useSelector((state) => state.starredRepos);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let isStarred = starredRepos.find((repo) => repo.id === id);\n    setStarred(isStarred);\n  }, [starredRepos, id]);\n\n  const clickHandler = () => {\n    if (starred) {\n      //prevent adding the same card\n      const filteredRepos = starredRepos.filter((repo) => repo !== starred);\n      dispatch({ type: SET_STARRED_REPOS, payload: filteredRepos });\n    } else {\n      // add card if its not starred yet\n      const newStarredRepos = [...starredRepos, repository];\n      dispatch({ type: SET_STARRED_REPOS, payload: newStarredRepos });\n    }\n  };\n  return (\n    <Card key={id}>\n      <Card.Content>\n        <Rating icon={\"star\"} onClick={clickHandler} rating={starred ? 1 : 0} />\n        <Image circular floated=\"right\" size=\"mini\" src={owner.avatar_url} />\n        <Card.Header>{name}</Card.Header>\n        <Card.Meta>\n          <Moment format=\"DD-MM-YYYY\">{created_at}</Moment>\n        </Card.Meta>\n        <Card.Description>{description}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <span>{stargazers_count} stars</span>\n      </Card.Content>\n\n      <Card.Content extra>\n        <div className=\"ui two buttons\">\n          <Button\n            animated=\"fade\"\n            basic\n            color=\"grey\"\n            href={html_url}\n            target=\"_blank\"\n          >\n            <Button.Content visible>\n              <Icon color=\"black\" name=\"github\" />\n              Github repository\n            </Button.Content>\n            <Button.Content hidden>To source code</Button.Content>\n          </Button>\n          <Button\n            animated=\"fade\"\n            basic\n            color=\"red\"\n            content=\"Live version\"\n            icon=\"keyboard\"\n            href={homepage}\n            target=\"_blank\"\n          >\n            <Button.Content visible>\n              <Icon name=\"keyboard\" />\n              Live Test\n            </Button.Content>\n            <Button.Content hidden> To webApp </Button.Content>\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}