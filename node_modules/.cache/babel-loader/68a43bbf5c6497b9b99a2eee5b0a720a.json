{"ast":null,"code":"import { setStarredRepos } from \"../lib/Localstorage\";\nimport { GET_POPULAR_REPOS, SET_STARRED_REPOS, IS_LOADING } from \"../lib/ActionTypes\";\nconst initialState = {\n  popularRepos: [],\n  starredRepos: [],\n  loading: true\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_POPULAR_REPOS:\n      return { ...state,\n        popularRepos: action.payload\n      };\n\n    case SET_STARRED_REPOS:\n      setStarredRepos(action.payload);\n      return { ...state,\n        starredRepos: action.payload\n      };\n\n    case IS_LOADING:\n      return { ...state,\n        loading: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/himanshu/Desktop/github-incentive-rep/src/store/Reducer.js"],"names":["setStarredRepos","GET_POPULAR_REPOS","SET_STARRED_REPOS","IS_LOADING","initialState","popularRepos","starredRepos","loading","reducer","state","action","type","payload"],"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,UAHF,QAIO,oBAJP;AAMA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,YAAY,EAAE,EAAhB;AAAoBC,EAAAA,YAAY,EAAE,EAAlC;AAAsCC,EAAAA,OAAO,EAAE;AAA/C,CAArB;;AAEA,MAAMC,OAAO,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,iBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,YAAY,EAAEK,MAAM,CAACE;AAFhB,OAAP;;AAIF,SAAKV,iBAAL;AACEF,MAAAA,eAAe,CAACU,MAAM,CAACE,OAAR,CAAf;AACA,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,YAAY,EAAEI,MAAM,CAACE;AAFhB,OAAP;;AAIF,SAAKT,UAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,OAAO,EAAEG,MAAM,CAACE;AAFX,OAAP;;AAIF;AACE,aAAOH,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["import { setStarredRepos } from \"../lib/Localstorage\";\nimport {\n  GET_POPULAR_REPOS,\n  SET_STARRED_REPOS,\n  IS_LOADING,\n} from \"../lib/ActionTypes\";\n\nconst initialState = { popularRepos: [], starredRepos: [], loading: true };\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POPULAR_REPOS:\n      return {\n        ...state,\n        popularRepos: action.payload,\n      };\n    case SET_STARRED_REPOS:\n      setStarredRepos(action.payload);\n      return {\n        ...state,\n        starredRepos: action.payload,\n      };\n    case IS_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}